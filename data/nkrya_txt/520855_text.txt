 В. Э. Карпов, Т. В. Мещерякова.
 Рассматривается один из методов автоматизации создания литературных текстов на основе словарно-шаблонного механизма.
 Выдвигается гипотеза о сведении большинства прозаических текстов к множеству жёстких параметризированных шаблонов.
 Введение
 Сразу следует отметить, что в этой статье не идёт речь о развитии работ М. Г. Гаазе - Рапопорта, Д. А. Поспелова и Е. Т. Семеновой [ 1, 2 ]- известных " Поисков вариантов..." и уж тем более - о программной реализации исследований В. Я. Проппа.
 Во-первых, множество из 31 функции волшебной сказки [ 3 ] со всеми взаимосвязями и согласованиями - это достаточно сложный объект, а во-вторых, мы будем говорить как раз о тех произведениях, в отношении которых замечательная, глубокая аналитика Проппа просто не работает.
 Мы будем говорить о системе, автоматизирующей написание сценариев всякого рода бесконечных сериалов, детективов и прочих им подобных литературных поделок.
 Не в последнюю очередь выбор именно этих направлений обусловлен тем, что подобного рода сочинений выходит крайне ( слишком) много, в этой области занято много людей, а труд их малоквалифицирован, механичен, тяжел и рутинен.
 Иными словами - это область, испытывающая насущную необходимость в полной или хотя бы частичной автоматизации.
 Предпринимавшиеся до сих пор попытки автоматизации сочинительства прозы, к сожалению, обладали существенным недостатком: на выходе получался скелет - полуфабрикат в виде последовательностей фреймов - ситуаций, подчинённых логике жанра, взаимоувязанных и сюжетно-обоснованных.
 Только эта логика и сюжетная строгость для нашей области никакой роли как раз не играет.
 На выходе необходим не скелет, нуждающийся в обязательной серьёзной литературной обработке, а именно текст.
 Желательно, в готовом виде.
 Правда, иногда какая-то если уже не логика, то хотя бы последовательность в действиях персонажей всё-таки нужна ( в тех же детективах).
 В этом случае можно согласиться и на использование некоторой схематичности.
 Например, в виде краткого описания того, кто куда пошёл, что взял / отдал, нашёл / потерял.
 Структура произведения
 Сюжеты, автоматизации создания которых посвящена настоящая работа, сводимы к множеству более или менее независимых эпизодов, где кто-то с кем-то встречается.
 При этом у персонажей имеется некий набор предметов, которые они могут передавать друг другу, а целевой функцией является нахождение / приобретение некоторого предмета персонажем, называемым главным героем.
 Таковым предметом - целью может быть признание главного злодея, отыскание давным-давно утерянного ребёнка, приобретение жены ( мужа) и т. п. К тому же персонажи могут выбывать из игры ( умирать, безвозвратно уезжать и т. д.).
 Простоты ради будем считать, что наше произведение состоит, как водится, из следующих последовательных элементов ( рис. 1): пролога ( завязки или экспозиции), тела ( множества эпизодов) и эпилога ( постпозиции).
 Пролог определяет главного героя, его состояние и целевую функцию.
 Тело произведения состоит из множества эпизодов.
 Каждый эпизод - это встреча двух персонажей - объекта и субъекта.
 В результате встречи может быть реализован обмен или отъём принадлежащих им вещей.
 Эпилог - это просто некая концовка истории, зависящая от того, по какой причине она была завершена.
 Причинами могут быть: главный герой добыл то, что нужно; главный герой умер; исчерпано наперёд заданное максимальное число встреч - эпизодов и т. д.
 Рассмотрим теперь структуры, описывающие объекты, из которых складывается наше произведение.
 Персонаж.
 Будем считать, что структура персонажа включает в себя имя, список того, что он имеет, и список того, что он хочет иметь ( цель).
 Кроме того, нам понадобится его характеристика ( тип), а также указание текущего местоположения ( чтобы можно было описывать пространственные перемещения).
 Таким образом, персонаж описывается пятёркой
 1)
 где N - имя персонажа;<t>- множество принадлежащих ему предметов;<g>- множество " целей ", т. е. тех предметов, которые он хочет получить; C - характеристика ( или множество характеристик); L - текущий локус.
 Типов C может быть сколь угодно много.
 Они нужны лишь для определения того, каков может быть исход встречи персонажей.
 Например, могут использоваться такие характеристики, как H - герой, A - антагонист, N - нейтральный персонаж, h - помощник героя и т. д.
 Встреча.
 Описание встречи состоит из указания объекта и субъекта ( кто и с кем встретился).
 Кроме того, встреча может иметь различные последствия для каждого из участников.
 Последствия делятся на фатальные и нефатальные.
 Фатальным последствием может быть " умертвление " персонажа, в результате чего он перестаёт фигурировать в дальнейшем развитии сюжета.
 Нефатальными являются " хорошие " или " плохие " исходы, не оказывающие влияние на ход сюжета.
 Они необходимы исключительно для внешнего антуража текста.
 Персонаж может заболеть ( не смертельно), пострадать ( не фатально), обрадоваться и т. п. На ход повествования это влияния не оказывает.
 Будем называть исход ( результат) встречи её типом.
 Помимо этого в результате встречи может происходить так называемый переход вещей персонажей, как в одностороннем порядке ( дарение, отъём, потеря и т. п.), так и в виде обмена.
 Следовательно, встреча описывается четвёркой
 2)
 где P
 A
 P
 B
 персонажи " субъект " и " объект " встречи; В.- тип встречи ( например, объекту встречи P хорошо ", а субъект P умер); T - описание перехода вещей ( например, объект P отдаёт принадлежащую ему вещь t субъекту P
 Эпизод.
 Очевидно, что с сюжетной точки зрения главным элементом эпизода является встреча.
 Однако с " художественной " точки зрения этого явно недостаточно.
 В работах Гаазе - Рапопорта и др. предлагается введение так называемого соединительного элемента между встречами.
 С учётом введённых выше параметров нам представляется следующая структура эпизода ( рис. 2).
 Каждый эпизод состоит из пролога встречи, собственно текста встречи и эпилога.
 Пролог встречи имеет сложную структуру.
 Во-первых, пролог определяет временные связи эпизодов:" долго ли, коротко..."" прошло 10 лет " и т. п.
 Поскольку мы рассматриваем произведения без побочных параллельных сюжетных линий, т. е. все эпизоды лежат на одной временной оси, то эти связи носят исключительно литературный характер, не влияя на причинно-следственные отношения.
 Во-вторых, персонажи действуют в определённых локусах.
 Следовательно, если субъект встречи в предыдущем эпизоде находился в локусе L
 A
 скажем " лес "), а объект находится в L
 B
 пустыня "), то необходим текст, увязывающий между собой переход из локуса L в локус L Он из лесу вышел... и увидел пустыню ")
 В-третьих, желательно иметь описание локуса (" лес был тих и печален ").
 Кроме того, в состав эпизода необходимо включать всякого рода фразы - паразиты ( элементы ФП на схеме).
 Они вообще не несут смысловой нагрузки.
 Их задача - несколько разукрасить текст.
 Элементами ФП могут быть всякие, ничего не значащие эмоциональные фразы и авторские отступления.
 Текст и эпилог зависят от параметров встречи.
 При этом если эпилог EM есть функция только от типа встречи R ( исхода, в том числе и фатальности), то выдаваемый текст TM зависит и от того, как был определён переход вещей T:
 3)
 Тексты и шаблоны
 В наших рассуждениях мы нигде не использовали термин " фрейм ", обходясь исключительно введением различного рода параметров структур - описателей.
 Разумеется, использование фреймов - поступков героев, антагонистов, помощников и т. д. представляется весьма привлекательным и перспективным подходом.
 Однако мы намеренно исключаем использование фреймов, как активных по определению объектов.
 Дело в том, что в настоящей работе предлагается использование исключительно словарно-шаблонного механизма генерации текстов ( разумеется, вместо термина " шаблон " можно использовать более красивые слова типа " пассивный фрейм " или даже " гештальт ", однако сути дела это не меняет).
 Суть этого подхода заключается в том, что генерация текста произведения осуществляется путём выборки из некоторой базы данных фрагментов параметризированных текстов - шаблонов.
 Параметры текста - шаблона определяются параметрами описанных выше управляющих структур.
 В основе этого механизма порождения текстов лежит следующая гипотеза:
 Значительная часть текста " реальных " литературных произведений представляет собой множество жёстких параметризированных шаблонов.
 Отсюда следует, что качество литературных произведений зависит от доли используемых шаблонов в общем объёме текста, числа параметров и разнообразия авторских вставок.
 Количественный и качественный анализ использования шаблонов выходит за рамки настоящей работы, поэтому примем эту гипотезу как данное.
 Генерация сюжетов
 Описываемые ниже некоторые приёмы и методы построения сюжетов сводятся к созданию процедур, генерирующих, в зависимости от выбранного жанра, последовательности эпизодов - встреч.
 Мы предполагаем, что во всех случаях у нас имеется множество персонажей с некоторыми характеристиками, определёнными в ( 1).
 Для простоты будем пока считать их абсолютно равноправными.
 Каждый из персонажей обладает множеством " вещей " и желает заполучить, в свою очередь, то, что может иметься у других.
 На этом и будут базироваться наши дальнейшие рассуждения.
 Линейная схема
 Это простейшая схема, в которой выбирается персонаж, называемый главным героем, и он последовательно встречается со всеми остальными персонажами, являясь субъектом каждой встречи.
 Иными словами, сюжет - это множество эпизодов вида
 4)
 где P - множество всех персонажей.
 Данная схема годится для генерации линейных сказок ( точнее, фантастических историй) и прочих произведений с выраженным главным героем.
 Сериал
 Название этой схемы является достаточно условным.
 Речь идёт о схеме, пригодной для генерации прежде всего бесконечных сериалов с бессвязными сериями и прочих " любовных " романов.
 Эта схема может считаться модификацией линейной, так как суть её заключается в том, что в каждом эпизоде - встрече субъектом и объектом могут быть произвольно выбранные персонажи:
 5)
 Детективная схема
 Рассмотрим теперь схему, реализующую достижение вполне определённой цели.
 Если в предыдущих вариантах повествование могло закончиться произвольным образом ( главный герой мог умереть, не найти искомого и т. п.), то при создании детективов необходимо заранее чётко определить условие завершения ( в отличие, скажем, от сценариев бразильско-мексиканского типа).
 Итак, пусть имеется множество равноправных персонажей.
 Из описания ( 1) нас сейчас интересует лишь множество имеющихся у них " вещей " и множество того, чего они желают заполучить.
 Таким образом " упрощённый " персонаж может быть описан тройкой
 6)
 где N - имя персонажа;<t
 i
 множество принадлежащих ему предметов;<g
 j
 множество " целей ", т. е. тех предметов, которые он хочет получить.
 Примем соглашение, согласно которому персонажи могут обмениваться вещами.
 При этом обмен -" честный ".
 Персонаж может отдать любую из имеющихся у него вещей за предложенную, если последняя находится в списке его целей ( т. е. нужна ему).
 Теперь, имея множество персонажей, у каждого из которых имеется что-то и каждый из которых чего-то желает получить, можно сформулировать следующую задачу развития детективного сюжета: определить последовательность обменов вещей персонажами таким образом, чтобы персонаж, называемый главным героем, смог бы добиться своей цели ( получения необходимого).
 Рассмотрим следующий пример.
 Пусть имеются персонажи
 При этом главным героем является персонаж p
 y
 который хочет найти / получить x.
 Искомый x имеется у персонажа p
 x
 Для определения всех возможных путей получения x ( наша цель - выжать по максимуму из столь бедного фактического материала) изобразим эти персонажи в виде графа возможных обменов ( рис. 3).
 Пометки дуг графа содержат в числителе то, что может предложить персонаж, а в знаменателе - то, что он может за это получить.
 Принцип формирования графа обменов достаточно очевиден.
 Этот граф служит основой для построения графа переходов вещей ( рис. 4).
 Вершинами его являются имеющиеся у персонажей вещи, а связи определяют, на что может быть обменена эта вещь.
 Штриховыми линиями определены " хозяева " вещей.
 Таким образом, наш сюжет представляет собой множество простых путей, ведущих из вершин <formula> в вершину x.
 Для нашего примера будет сформировано следующее множество:
 Разумеется, в таком виде эти пути малоинформативны.
 Но, во-первых, мы знаем, кому эти вещи принадлежат, а во-вторых, можно заранее установить, что эти обмены реализуются путём последовательных встреч главного героя с " нужными людьми ".
 Тогда абсолютно шаблонно мы можем вместо безликого перечисления переходов вещей генерировать нечто вроде такого: Завязка:( A хочет иметь x)
 А отсюда следует, что мы можем генерировать полностью определённые последовательности встреч, прологов, эпилогов и т. п.
 Типизация персонажей
 Выше говорилось о том, что для каждого персонажа определён его тип.
 Эта типизация необходима исключительно для того, чтобы определить возможный исход встречи с точки зрения " хорошо / плохо ".
 Поскольку в каждый момент времени встречаются два персонажа, то исход ( тип) встречи может быть определён двойкой
 7)
 где <formula>.
 Здесь символ "+" обозначает благоприятный исход "-"- неблагоприятный, а d обозначает фатальные последствия ( персонаж умирает).
 Тогда исход встречи ( d,+) означает, что субъект встречи умирает ( d), а объекту встречи, напротив, хорошо (+).
 Для каждой пары типов персонажей в зависимости от жанра определяются эти варианты исходов.
 Например, в " доброй сказке " результатом встречи героя ( тип H) с антагонистом ( тип A) могут быть варианты (+,-),(+, d), но никак не ( d,+).
 Трагедия, наоборот, изобилует печальными как для субъекта, так и для объекта встречи вариантами:(-,-),( d, d) и т. д. Отметим, что в [ 1 ] предлагается иной подход - там определяются возможные встречи персонажей ( кто и с кем) в зависимости от их типа, считая исходы встреч фиксированными.
 База данных
 Итак, основу предлагаемого метода составляет множество всевозможных параметризированных шаблонов.
 Параметризация заключается в указании типа этого шаблона ( например, того, что шаблон представляет собой текст для ситуации, в которой субъекту хорошо, объекту плохо и при этом происходит обмен принадлежащими им вещами).
 Помимо этого в тексте шаблона используются различного рода маркёры, указывающие на необходимость подстановки конкретных значений параметров встречи - имён персонажей, их характеристик, локусов, предметов и т. п.
 Состав БД
 Рассмотрим некоторые основные шаблоны, из которых строится текст.
 Это множество шаблонов и образует базу данных, форма представления которой может быть, вообще говоря, произвольной.
 Ниже приведён один из вариантов открытого текстового формата, вряд ли самого эффективного с точки зрения скорости обработки, но зато универсального и наглядного.
 Общие словари
 Базовый словарь.
 Содержит слова в виде пятёрки ( Слово)( Тип)( Число)( Род)( Падеж),
 где ( Тип)<formula>< n ( существительное), v ( глагол), p ( прилагательное)> Например:
 word разбойник n, s, m, im разбойником n, s, m, tv разбойнике n, s, m, pr
 Словарь нужен для извлечения слов, согласованных по падежу, числу, роду и т. п. Например, в тексте шаблона может быть указано "...( бежать A)...
 Это означает, что необходимо отыскать слово " бежать " в том роде и числе, которые определяются параметром субъекта встречи A.
 На самом деле речь идёт об использовании морфологического словаря со множеством правил образований словоформ.
 Синонимы.
 Для придания большей " живости " желательно не только отыскать слово в базовом словаре, но и попробовать заменить его на какой-нибудь синоним.
 synonym < отнять отнять отобрать забрать >synonym< увидеть увидеть посмотреть глянуть >
 Словоформы.
 Очевидно, что всех слов в базовом словаре не напасёшься.
 Поэтому можно воспользоваться следующим достаточно грубым приёмом.
 Если слово, указанное в шаблоне, не найдено в базовом словаре ( или нет его необходимой формы), то анализируется его окончание.
 Далее, в зависимости от рода окончание заменяется на указанное.
 Например:
 wform <" ть """, т " л "> wform " ти > wform " ый ", im, m " ый ">
 Правда, при таком подходе могут появляться такие формы, как " умерел " вместо " умер ", но это всегда можно отнести к особенностям авторского языка.
 При наличии подходящего морфологического словаря вкупе с реализованным алгоритмом предсказания словоформ всё это становится уже неактуальным.
 Фразы - паразиты.
 Они же - авторские отступления.
 VocParazit
 А дальше вот что было."
 Стало быть "
 А что дальше было?
 А вот что.">
 Связующие элементы
 Обстоятельства времени.
 Ничего не значащие фразы о времени встречи.
 time
 Рано утром "
 Поздно вечером, когда солнце уже село..."
 Аккурат под Новый год "
 Восьмого марта ">
 Переходы во времени.
 Определяют интервал между встречами.
 Тоже ничего не значат.
 mvtime
 Скоро сказка сказывается, да не скоро дело делается."
 Долго ли, коротко ли..."
 Прошло 15 лет."
 Локусы.
 Для описания каждого локуса необходимо сгенерировать соответствующий текст.
 locus <" Лес "
 Тёмный лес шумел кругом.
 Лес был тих и печален.">
 locus <" Тундра "
 В то время года тундра была особенно красива.
 Тучные стада оленей паслись неподалёку.">
 Связки локусных переходов.
 Это уже параметризированные шаблоны.
 Необходимы для описания того, как персонаж добирается до места встречи из одного локуса в другой.
 Формат:( Локус отправления X Локус назначения)<( Текст перехода)>
 Например:
 link < Лес " Берег моря "
 Выйти A) из лесу ( pA. im)( A. im) и ( дойти A) до берега.">
 link " Берег моря ", тундра
 Сойти A ( pA. im)( A. im) на берег.
 Впереди - тундра.">
 Здесь конструкция ( A. im) означает подстановку имени персонажа - субъекта в именительном падеже, а ( pA. im)- подстановку характеристики субъекта в том же именительном падеже.
 Управляющие словари
 Исходы встреч.
 Определяют результат встречи в зависимости от типов участников.
 Здесь H - герой, A - антагонист ( антигерой), PH - помощник героя, PA - помощник антагониста.
 Сюжетные словари
 Прологи и эпилоги.
 Они определяют завязку сюжета и различные варианты окончания.
 К ним же относятся словари прологов и эпилогов эпизодов.
 Приведём некоторые из них без комментариев.
 Например, так описывается встреча, благоприятная для субъекта A, неблагоприятная для B, и в результате которой происходит отъём вещи, принадлежащей субъекту B.
 Эпизоды.
 Описание эпизода может быть отнесено к управляющим словарям, однако его структура полностью описывает встречу с сюжетной точки зрения.
 Формат описания эпизода:
 Субъект),( Объект),( Исход встречи),( Переход вещей),( вещь A),( вещь B)
 Например, в эпизоде
 episode <" Солдат "" Змей Горыныч ""+ d "" BA "" Ковер-самолет "" Шапка-невидимка ">
 происходит взаимный обмен вещами, при этом объект встречи ( Змей Горыныч) погибает.
 Прочие словари
 К ним относятся вспомогательные структуры, хранящие параметры генерации историй, списки возможных персонажей, вещей, целей и т. д.
 Методология выбора шаблонов
 Основная идея создания разнообразных текстов заключается в использовании процедуры доопределения неизвестных параметров - структур.
 Доопределение заключается в случайной выборке необходимых параметров из соответствующих структур.
 Например, если не определён список возможных эпитетов, то этот список формируется случайным образом путём выборки прилагательных из основного словаря.
 Таким образом появляются " круглые Василисы Премудрые " и " зелёные Колобки ".
 То же относится и к случаю отсутствия заранее заданного списка персонажей.
 Тогда вполне можно получить истории в стиле Г. X.
 Андерсена, когда персонажем может быть топор, облако или даже какая-нибудь тундра.
 К счастью, ни неожиданные персонажи, ни их сюрреалистические определения - эпитеты не сказываются на качестве текстов, привнося, напротив, элемент оригинальности и самобытности.
 Обычно это хорошо проходит для сказок и сериалов.
 Несколько сложнее обстоит дело с детективными историями.
 Словари для них создавать значительно сложнее.
 Если словарь мексиканско-бразильского сериала формируется на основе словаря сказок путём прямой замены Ивана - Царевича на очередного Луиса - Альберто, а поиск Царевны - Лягушки - на поиск утерянного младенца, то с детективами всё не так просто.
 Если в сказке / сериале / любовном романе последовательность эпизодов может генерироваться случайным образом прямо во время выполнения программы, т. е. по ходу действия, то для детектива эпизоды формируются заранее.
 При этом каждый эпизод / встреча построен на том, что персонажи обмениваются вещами, причём обязательно взаимно.
 В сериальном же варианте тип встречи в смысле перехода вещей может выбираться произвольно ( поэтому при встречах персонажи могут и не меняться вещами, могут отнимать, терять и т. п.).
 Добиться того, чтобы в ходе сюжета герой мог отнять что-то у кого-то, можно путём введения фиктивных обменов, т. е. неравноправных обменов фиктивными вещами.
 Например, чтобы " отнять " свидетельские показания ( получить их), вовсе не обязательно снабжать героя, скажем, деньгами для подкупа, чтобы " обменять " их на нужную вещь ( признание).
 Герою достаточно иметь фиктивный предмет для обмена - большой кулак, свирепый взгляд или служебное удостоверение.
 Тогда персонаж - объект будет описан как
 Свидетель,<" показания ">,<" большой кулак "" удостоверение ">)
 т. е. свидетель готов обменять " показания " на " большой кулак " или " удостоверение ".
 С целью поисков в детективе просто.
 Ею может быть, например, чистосердечное признание ( как то, что имеется у кого-то).
 А по ходу дела ищутся свидетели, улики и проч.
 Когда всё будет найдено, детектив и закончится ( на то он и детектив).
 Примеры работы
 Приведём ниже два примера работы генератора текстов.
 Первый - с линейным сюжетом, который генерировался непосредственно по ходу изложения, и второй - детективный, с использованием системы предварительной генерации встреч.
 Мексиканская ( бразильская) история
 Эта совокупность текстов была получена на основе словарей, созданных Е. В. Карповой.
 Поскольку история получилась длинной, то приведено лишь несколько эпизодов.
 В приведённом ниже фрагменте подчёркнутым шрифтом обозначена справочная ( отладочная) информация, а зачеркнут рудимент сказочной базы данных.
 Автором система считает начальное значение инициализации генератора случайных чисел.
 МЕКСИКАНО-БРАЗИЛЬСКАЯ ИСТОРИЯ.
 ВЕРСИЯ 1. 04.
 Автор:' 1064824021 '
 Про то, как Несчастная Роза хотела большое наследство найти
 ПРОЛОГ
 Жила в прерии Несчастная Роза.
 Подумалось как-то Несчастной Розе, что не плохо было бы иметь большое наследство.
 И отправилась Несчастная Роза в дорогу.
 1 ***
 СПРАВКА ( СОДЕРЖАНИЕ ВСТРЕЧИ):<" Несчастная Роза "" Прекрасная Марианна ""++"" AA "" Золотое сомбреро "" Белая яхта ">
 Прошло примерно 3 часа, но как долго они тянулись!
 Не легок путь от прерии до Мехико.
 Огромное стадо волов паслось неподалёку.
 Поздно вечером, когда солнце уже село, видит Несчастная Роза - сидит богатая Прекрасная Марианна, улыбается.
 А дальше вот что было.
 Подарила Прекрасная Марианна Несчастной Розе белую яхту.
 Поблагодарила Несчастная Роза Прекрасную Марианну за белую яхту.
 Махнула Несчастная Роза рукой и пошла дальше.
 Радостно было на душе.
 4 ***
 СПРАВКА ( СОДЕРЖАНИЕ ВСТРЕЧИ):<" Несчастная Роза "" Прекрасная Марианна ""++"" BB "" Золотое сомбреро """> Спустилась с плато добрая Несчастная Роза.
 Видит - Мехико.
 В то время года в Мехико было особенно много людей.
 Рано утром глянула добрая Несчастная Роза - сидит Прекрасная Марианна, радуется.
 Короче, подарила Несчастная Роза Прекрасной Марианне золотое сомбреро.
 Поблагодарила Прекрасная Марианна Несчастную Розу за золотое сомбреро.
 И пошла Несчастная Роза дальше.
 На душе было легко и спокойно.
 Долго можно было бы рассказывать о похождениях Несчастной Розы.
 Но на этом пока всё.
 В другом варианте ( автор - 1064824089) история закончилась на девятом эпизоде:
 9 ***
 СПРАВКА ( СОДЕРЖАНИЕ ВСТРЕЧИ):
 Гильермо Капетильо "" Донна Изаура "" Н -"" AA "" Белая яхта "" Большое наследство ">
 Прошла ночь.
 Солнце сияло на небосклоне.
 Не легок путь от болота до Мехико.
 Огромное стадо волов паслось неподалёку.
 Ровно в полдень видит Гильермо Капетильо - сидит умная Донна Изаура.
 В глазах Донны Изауры мелькнула тревога.
 Случилось так, что отобрал Гильермо Капетильо у Донны Изауры большое наследство.
 Получил Гильермо Капетильо то, что хотел.
 Тут сериалу и конец.
 Детективная история
 Пример одной из детективных историй ( словари Е. В. Карповой и Т. В. Мещеряковой) построен на описании начальной ситуации, соответствующей схеме на рис. 3.
 При этом была сделана следующая содержательная замена идентификаторов:
 A =" Шерлок Холмс ", B =" доктор Ватсон ", C =" секретарь ", D =" профессор Мориарти ", a 1 =" удостоверение детектива ", a 2 =" Z ", a 3 =" пистолет ", b 1 =" улика ", b 2 =" мотив преступления ", c 1 =" фоторобот ", c 2 =" показания свидетеля ", x =" признание в преступлении ".
 При этом не участвующий ни в каких обменах предмет ex вообще исключён.
 Кроме того, следует обратить внимание на вещь a 2.
 Это - так называемая псевдовещь.
 Служит она для того, чтобы можно было по ходу сюжета не ограничиваться обменами вещей ( пусть даже и фиктивными - удостоверениями, грозными взглядами, кулаками и проч.)
 Введение псевдовещи позволяет осуществлять отъём вещей в зависимости от типов персонажей.
 Например, чтобы можно было позволить положительным персонажам отнимать только у отрицательных, первые автоматически снабжаются не фигурирующей в сюжете псевдовещью, а антигерои, напротив, получают таковую в качестве цели.
 Это, кстати, позволяет вводить персонажи как неимущие, так и бесцельные.
 На основе сгенерированной последовательности эпизодов
 episolde (" Шерлок Холмс "" секретарь ""++"" AA """" фоторобот ")
 episode (" Шерлок Холмс "" доктор Ватсон ""++"" BA "" фоторобот "" улика ")
 episode (" Шерлок Холмс "" профессор Мориарти ""+-"" BA "" улика "" признание в преступлении ")
 был получен следующий текст.
 Автор:' 1065116356 '
 ПРОЛОГ
 В городе N было совершено преступление.
 Этим делом занялся Шерлок Холмс.
 И отправился Шерлок Холмс искать преступника.
 1 ***
 Прошла ночь.
 Путь от полицейского участка до Парка занял очень много времени.
 В парке в этот день было мало посетителей.
 Поздно вечером, когда солнце уже село, встретил глупый Шерлок Холмс доброго секретаря.
 Нет ли у Вас фоторобота?- спросил Шерлок Холмс секретаря.
 А как же!- ответил радостно секретарь.
 Получил Шерлок Холмс от секретаря фоторобот.
 Спасибо за фоторобот,- сказал Шерлок Холмс секретарю.
 Махнул Шерлок Холмс рукой и пошёл дальше.
 2 ***
 Прошла ночь.
 От Парка до Больницы пришлось добираться на двух трамваях.
 Утром стояла тишина.
 На пост позвонили.
 После обеда посмотрел глупый Шерлок Холмс - сидит молодой доктор Ватсон.
 А нет ли у тебя случайно фоторобота?- поинтересовался доктор Ватсон у Шерлока Холмса, робко улыбаясь.
 Показал издали Шерлок Холмс фоторобот доктору Ватсону.
 Протянул доктор Ватсон обе руки к фотороботу и предложил Шерлоку Холмсу махнуться.
 Скрепя сердце, отдал Шерлок Холмс доктору Ватсону фоторобот.
 Поблагодарил доктор Ватсон Шерлока Холмса за фоторобот и отдал доктор Ватсон Шерлоку Холмсу улику.
 Напряжённо думая и бережно прижимая к груди улику, Шерлок Холмс пошёл дальше.
 3 ***
 Долго ли, коротко ли...
 Добраться до Дома оказалось нелегко.
 В заброшенном доме стоял беспорядок.
 Видит Шерлок Холмс - сидит красивый профессор Мориарти.
 В глазах профессора Мориарти мелькнула тревога.
 А что дальше было?
 А вот что.
 А вот что есть у меня!- сказал Шерлок Холмс и предъявил профессору Мориарти улику.
 Ладно, делать нечего,- сказал профессор Мориарти.
 Держи.
 Получил Шерлок Холмс от профессора Мориарти признание в преступлении.
 Благодарить не буду,- сказал сурово Шерлок Холмс профессору Мориарти.
 Раскрыл Шерлок Холмс это сложное дело.
 Тут детективу и конец.
 Заключение
 Авторы никоим образом не претендуют на общность предлагаемого решения задачи автоматизации литераторского труда.
 Описанный выше метод - лишь один из возможных вариантов.
 Наша задача заключается, прежде всего, в акцентировании внимания на необходимости подобного рода автоматизации, причём в таком виде, который допускал бы получение на выходе практически готового текста.
 Кроме того, сугубо технически появляется возможность генерации не только текста, но и сценария для автоматической анимации ( или хотя бы иллюстрирования) произведения, что открывает перспективы создания не только псевдолитературных продуктов ( всё равно читают мало), но и комиксов, примитивных мультфильмов и прочих незатейливых поделок, главным достоинством которых будет массовость во всех смыслах.
 Разумеется, предложенный механизм не лишен недостатков.
 Основными проблемами генерации текстов являются, во-первых, проблемы методологического характера ( имеются в виду возможные замечания со стороны филологов / лингвистов вообще и литературоведов в частности), а во-вторых,- отсутствие автоматической генерации самих шаблонов - словарей.
 Последнее является самостоятельной, весьма интересной задачей, решив которую, можно было бы говорить уже не об автоматизации, а о создании полностью автоматических систем.
 Что же касается литературоведческо-филолого-лингвистических возражений, то здесь мы заранее согласны на всё и со всем.
 Признаём и осознаём.
 В защиту скажем лишь, что, увы, пропасть между красивой и могучей теорией и неприглядной практикой была, есть и будет, а кроме того, всё равно вряд ли кто-то воспримет всё это всерьёз.
 Рис. 1.
 Общая структура произведения
 Рис. 2.
 Структура эпизода
 Рис. 3.
 Граф возможных обменов
 Рис. 4.
 Граф перехода вещей
